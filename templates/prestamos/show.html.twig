{% extends 'base.html.twig' %}

{% block title %}Prestamos
{% endblock %}

{% block body %}

	<div class="container " style="min-height:80vh">
		<div class="card ">
			<div class="card-body">
				<div class="d-flex gap-2 ">
					<span>Prestamo</span>
					<h3 scope="row">#{{ prestamo.id }}</h3>
				</div>
				<div class="d-flex gap-2 ">
					<span>Estado</span>
					<h3 scope="row">{{ prestamo.estado }}</h3>
				</div>
				<div class="d-flex gap-2 ">
					<span>Cliente</span>
					<h3 scope="row">{{ prestamo.cliente.name }}</h3>
				</div>
				<div class="d-flex gap-2 ">
					<span>Valor Prestamo</span>
					<h3 scope="row">
						COP
						{{ prestamo.valorTotal|number_format(1, '.', ',') }}
					</h3>
				</div>
				<div class="d-flex gap-2 ">
					<span>Pago x Interes</span>
					<h3 scope="row">
						COP
						{{ prestamo.valorInteres|number_format(1, '.', ',') }}
					</h3>
				</div>
				<div class="d-flex gap-2 ">
					<span>Deuda Actual</span>
					<h3 scope="row">
						COP
						{{ prestamo.deudaActual|number_format(1, '.', ',') }}
					</h3>
				</div>
				<div class="d-flex gap-2 ">
					<span>Porcenta de Interes</span>
					<h5 scope="row">{{ prestamo.porcentajeInteres }}%</h5>
				</div>
				<div class="d-flex gap-2 ">
					<span>Dia del mes para el pago</span>
					<h5 scope="row">{{ prestamo.diaPago }}
					</h5>
				</div>
				<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
					Crear Pago
				</button>

				<div class="table-responsive  mt-4">
					<table class="table table-sm">
						<thead>
							<tr>
								<th scope="col">#</th>
								<th scope="col">Fecha</th>
								<th scope="col">Valor Total</th>
								<th scope="col">Abono Interes</th>
								<th scope="col">Abono Capital</th>
							</tr>
						</thead>
						<tbody>

							{% for pago in prestamo.pagos %}

								<tr>

									<th scope="row">PG#{{ pago.id }}</th>
									<td>{{ pago.fecha|date('l | M-d-y') }}</td>

									<td>{{ pago.pagoTotal |number_format(2, ',', '.')  }}</td>
									<td>{{ pago.pagoInteres |number_format(2, ',', '.')  }}</td>
									<td>{{ pago.abonoCapital |number_format(2, ',', '.')  }}</td>


								</tr>

							{% endfor %}


						</tbody>
					</table>
				</div>


			</div>


		</div>


		<div class="modal fade" tabindex="-1" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" aria-labelledby="exampleModalLabel" aria-hidden="true">
			<div class="modal-dialog">
				<div class="modal-content">
					<div class="modal-header">
						<h1 class="modal-title fs-5" id="exampleModalLabel">Crear Pago</h1>
						<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
					</div>
					<div class="modal-body">

						{{ form(form, {'action': path('app_prestamos_show', {'id': prestamo.id})}) }}

						</div>

					</div>
				</div>
			</div>
		</div>

	{% endblock %}


	{% block javascripts %}
		{{ parent() }}
		 <script>
										    // Inicializar Flatpickr
											var input1 = document.querySelector('#pagos_pago_interes');
										var input2 = document.querySelector('#pagos_abono_capital');
										var resultado = document.querySelector('#pagos_pago_total');
										
										// Escuchar el evento 'input' en los campos de entrada
										input1.addEventListener('input', actualizarResultado);
										input2.addEventListener('input', actualizarResultado);
										
										// Función para actualizar el resultado
										function actualizarResultado() {
										    // Obtener los valores de los campos de entrada
										    var valorInput1 = parseFloat(input1.value) || 0;
										    var valorInput2 = parseFloat(input2.value) || 0;
										
										    // Calcular la suma de los valores
										    var suma = valorInput1 + valorInput2;
										
										    // Asignar el resultado al campo de entrada 'resultado'
										    resultado.value = suma.toFixed(2); // Ajusta el número de decimales según sea necesario
										}
										
										</script>

	{% endblock %}
